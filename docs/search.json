[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Explorando Datos: Mi Bit√°cora Personal de Aprendizaje",
    "section": "",
    "text": "1 Introducci√≥n a la Bit√°cora üìñ\nEsta bit√°cora tiene como finalidad consolidar y estructurar los aprendizajes adquiridos durante mi maestr√≠a en Estad√≠stica y Ciencia de Datos. Es un proyecto que organiza mis conocimientos de forma sistem√°tica, combinando teor√≠a, pr√°cticas y an√°lisis aplicado.\n\n1.0.1 Objetivos del Libro\n\nEstructuraci√≥n del conocimiento: Unificar conceptos, t√©cnicas y pr√°cticas clave de estad√≠stica y ciencia de datos en un √∫nico lugar.\n\nReproducibilidad: Garantizar que los an√°lisis, modelos y visualizaciones incluidos sean replicables.\n\nReferencia continua: Crear un recurso que funcione como un manual de consulta para futuros proyectos acad√©micos y profesionales.\n\nDesarrollo profesional: Documentar mi progreso y habilidades, con un enfoque en aplicaciones pr√°cticas y soluciones orientadas a los datos.\n\n\n\n1.0.2 Contenido\nEn esta primera etapa, este libro se est√° construyendo paso a paso como una herramienta de aprendizaje integral. En los pr√≥ximos meses, se espera que evolucione para abarcar temas como:\n\nFundamentos de estad√≠stica descriptiva e inferencial.\n\nProgramaci√≥n en R y Python para explorar y analizar datos.\n\nIntroducci√≥n a m√©todos avanzados como machine learning y an√°lisis predictivo.\n\nVisualizaci√≥n de datos como herramienta clave para interpretar y comunicar resultados.\n\nEsta bit√°cora no solo recopila informaci√≥n, sino que tambi√©n busca establecer una metodolog√≠a clara para el aprendizaje continuo en un campo en constante evoluci√≥n.\n\nEste libro es un reflejo de mi enfoque acad√©mico y t√©cnico, pensado como un recurso funcional y duradero.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introducci√≥n a la Bit√°cora üìñ</span>"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1¬† Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. ‚ÄúLiterate Programming.‚Äù Comput. J. 27 (2): 97‚Äì111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2¬† Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. ‚ÄúLiterate Programming.‚Äù Comput.\nJ. 27 (2): 97‚Äì111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "qmd_files/intro.html",
    "href": "qmd_files/intro.html",
    "title": "Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. ‚ÄúLiterate Programming.‚Äù Comput. J. 27 (2): 97‚Äì111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "qmd_files/summary.html",
    "href": "qmd_files/summary.html",
    "title": "Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "qmd_files/references.html",
    "href": "qmd_files/references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. ‚ÄúLiterate Programming.‚Äù Comput.\nJ. 27 (2): 97‚Äì111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "qmd_files/Entendiendo los Datos de Prueba.html",
    "href": "qmd_files/Entendiendo los Datos de Prueba.html",
    "title": "Entendiendo los Datos",
    "section": "",
    "text": "Prueba Diagnostica SAVIO\nAhora bien, esta grafica mostrada aqui se ve algo fea, voy a intentar corregir la manera en que se representa la tabla.\nLo que hago con la libreria ‚ÄòkableExtra‚Äô es darle un formato mas bonito a la tabla, con la funcion kable le paso la base de datos y el formato que quiero que tenga, luego con kable_styling le doy un estilo de bootstrap y con scroll_box le doy un tama√±o a la tabla.\nTeniendo en cuenta la base de datos datos_economicos.csv, estas son las descripciones de cada variable:\nLas preguntas son las siguientes\n# Tama√±o de la muestra\ntama√±o_muestra = nrow(df_datos_economicos)\ntama√±o_muestra\n\n[1] 264\nlo que estamos haciendo aqui es contar el numero de filas que tiene la base de datos, esto nos da el tama√±o de la muestra.\n# Valores faltantes en la variable VM\nvalores_faltantes_VM = sum(is.na(df_datos_economicos$VM))\nvalores_faltantes_VM\n\n[1] 0\nBasicamente seria sumar la cantidad de valores faltantes en la variable VM, esto se hace con la funcion is.na que nos devuelve un vector logico con TRUE si el valor es NA y FALSE si no lo es, luego sumamos los TRUE para saber cuantos valores faltantes hay.\n# Varianza de la variable VM\nvarianza_VM = var(df_datos_economicos$VM, na.rm = TRUE)\nvarianza_VM\n\n[1] 25061266\nLa varianza se calcula con la funcion var y se le pasa el vector de la variable VM, tambien se le pasa el argumento na.rm = TRUE para que ignore los valores faltantes.\n# Media de la variable VM\nmedia_VM = mean(df_datos_economicos$VM, na.rm = TRUE)\nmedia_VM\n\n[1] 20165.95\nLa media se calcula con la funcion mean y se le pasa el vector de la variable VM, tambien se le pasa el argumento na.rm = TRUE para que ignore los valores faltantes.\n# Categor√≠a que m√°s se repite en la variable Regi√≥n\ncategoria_mas_repetida = names(which.max(table(df_datos_economicos$Region)))\ncategoria_mas_repetida\n\n[1] \"Sur\"\nLo que estamos haciendo aqui es contar cuantas veces se repite cada categoria en la variable Region, luego con la funcion which.max nos devuelve el nombre de la categoria que mas se repite.\n# Media de la inversi√≥n en publicidad para el tipo de tienda Mediana\nmedia_inversion_publicidad_mediana = mean(df_datos_economicos$IP[df_datos_economicos$TT == \"Mediana\"], na.rm = TRUE)\nmedia_inversion_publicidad_mediana\n\n[1] 4903.308\nLo que estamos haciendo aqui es filtrar la base de datos para que solo nos muestre los valores de la variable IP que correspondan a la categoria de tienda Mediana, luego calculamos la media de estos valores.",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Entendiendo los Datos</span>"
    ]
  },
  {
    "objectID": "qmd_files/Entendiendo los Datos de Prueba.html#prueba-diagnostica-savio",
    "href": "qmd_files/Entendiendo los Datos de Prueba.html#prueba-diagnostica-savio",
    "title": "Entendiendo los Datos",
    "section": "",
    "text": "Regi√≥n: Indica la zona geogr√°fica donde est√°n ubicadas las tiendas minoristas.\n\nTipo de Producto (TP): Representa la categor√≠a de productos que venden las tiendas.\n\nInversi√≥n en Publicidad (IP) (en miles de pesos): Muestra cu√°nto dinero invierte cada tienda en publicidad.\n\nVentas Mensuales (VM) (en miles de pesos): Refleja los ingresos generados por las tiendas en ventas mensuales.\n\nEmpleados: N√∫mero de trabajadores que tiene cada tienda.\n\nDescuento Promedio (DP) (en porcentaje): Porcentaje promedio de descuento que ofrecen las tiendas.\n\nTama√±o de la Tienda (TT): Define si el tama√±o de la tienda es peque√±o, mediano o grande.\n\nProveedor Principal (PP): Indica el principal proveedor de productos (Proveedor A, Proveedor B o Proveedor C).\n\n\n\nEl tama√±o de la muestra.\n\n\n\n\n¬øCu√°ntos valores faltantes hay en la variable VM?\n\n\n\n\n¬øCu√°l es la varianza de la variable VM?\n\n\n\n\n¬øCu√°l es la media de la variable VM?\n\n\n\n\n¬øCu√°l es la categor√≠a que m√°s se repite en la variable Regi√≥n?\n\n\n\n\n¬øCu√°l es la media de la inversi√≥n en publicidad para el tipo de tienda Mediana?",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Entendiendo los Datos</span>"
    ]
  },
  {
    "objectID": "qmd_files/Entendiendo los Datos de Prueba.html#graficos",
    "href": "qmd_files/Entendiendo los Datos de Prueba.html#graficos",
    "title": "Entendiendo los Datos",
    "section": "Graficos",
    "text": "Graficos\nVamos a intentar hacer un grafico de barras para la variable Regi√≥n y un grafico de dispersi√≥n para la variable Inversi√≥n en Publicidad y Ventas Mensuales.\n\n# Cargamos la librer√≠a\nlibrary(ggplot2)\n\n\n# Grafico de barras para la variable Regi√≥n\nggplot(df_datos_economicos, aes(x = Region)) +\n  geom_bar(fill = \"steelblue\") +\n  labs(title = \"Distribuci√≥n de las tiendas por regi√≥n\",\n       x = \"Regi√≥n\",\n       y = \"Frecuencia\")\n\n\n\n\n\n\n\n\nEsto es un grafico usando la libreria ggplot2, lo que estoy haciendo es contar cuantas veces se repite cada categoria en la variable Region y luego graficar esto en un grafico de barras.\nAhora bien para crear un grafico de dispersi√≥n necesitamos tener en cuenta que la variable Inversi√≥n en Publicidad y Ventas Mensuales son de tipo numerico, por lo que podemos hacer un grafico de dispersi√≥n.\n\n# Grafico de dispersi√≥n para la variable Inversi√≥n en Publicidad y Ventas Mensuales\nggplot(df_datos_economicos, aes(x = IP, y = VM)) +\n  geom_point(color = \"steelblue\") +\n  labs(title = \"Relaci√≥n entre la inversi√≥n en publicidad y las ventas mensuales\",\n       x = \"Inversi√≥n en Publicidad\",\n       y = \"Ventas Mensuales\")\n\n\n\n\n\n\n\n\nAun puedo hacer mas graficos, como un grafico de cajas para la variable Tipo de Producto y Ventas Mensuales.\n\n# Grafico de cajas para la variable Tipo de Producto y Ventas Mensuales\nggplot(df_datos_economicos, aes(x = TP, y = VM)) +\n  geom_boxplot(fill = \"steelblue\") +\n  labs(title = \"Distribuci√≥n de las ventas mensuales por tipo de producto\",\n       x = \"Tipo de Producto\",\n       y = \"Ventas Mensuales\")\n\n\n\n\n\n\n\n\nEste grafico de caja lo que me intenta decir es que tan dispersos estan los datos de la variable Ventas Mensuales para cada categoria de la variable Tipo de Producto.",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Entendiendo los Datos</span>"
    ]
  },
  {
    "objectID": "qmd_files/Reto_1.html",
    "href": "qmd_files/Reto_1.html",
    "title": "Reto 1 üéì",
    "section": "",
    "text": "En este ejercicio, trabajaremos con una muestra aleatoria de egresados de la UTB, quienes proporcionaron informaci√≥n sobre las siguientes variables: - Sexo: Masculino o Femenino.\n- Edad: En a√±os.\n- Promedio final acumulado: Nota promedio obtenida durante la carrera.\n- Ingresos estimados mensuales: En d√≥lares (USD).\n- Estado laboral: Si actualmente est√°n trabajando o no.\n- Altura: En metros (m).\n- Peso: En kilogramos (kg).\n- Estado civil: Clasificado en tres categor√≠as: - Soltero.\n- Casado.\n- Uni√≥n libre (Uni-lib).\nPuedes descargar el conjunto de datos desde: Egresados.csv.\n\n\nüìÇ Cargar los datos\nPara comenzar, necesitamos cargar el conjunto de datos y visualizar las primeras observaciones.\n\n# Cargar los datos\ndf_egresados = read.delim(\"../assets/data/Reto_1/Egresados.csv\", \n                          sep = \";\", \n                          dec = \",\",\n                          )\ndf_egresados\n\n     Sexo Edad Promedio Ingresos Trabaja Altura   Peso   Civil\n1  Hombre   21      4.0      263      Si   1.48  50.19 Soltero\n2   Mujer   28      4.0      247      No   2.06  59.09 Uni-lib\n3  Hombre   22      3.5      230      Si   1.93  53.25 Uni-lib\n4   Mujer   23      3.4      192      No   1.76  63.86  Casado\n5   Mujer   25      3.6      204      No   1.78  84.68  Casado\n6  Hombre   24      4.5      307      No   1.44 115.12 Uni-lib\n7   Mujer   22      3.9      293      No   1.73  90.08 Soltero\n8   Mujer   22      3.6      152      No   2.02  52.95  Casado\n9   Mujer   24      4.1      334      No   1.80  56.92 Uni-lib\n10 Hombre   22      3.8      197      Si   1.59  87.16 Soltero\n11  Mujer   22      4.0      176      No   1.65  58.26 Soltero\n12 Hombre   22      3.9      184      No   1.84  50.06 Soltero\n13 Hombre   19      4.2      222      Si   1.46  56.34  Casado\n14 Hombre   22      3.8      242      Si   1.86  56.84  Casado\n15  Mujer   23      4.0      184      No   1.56  72.70 Uni-lib\n16  Mujer   23      3.5      254      Si   1.45  83.00 Uni-lib\n17 Hombre   23      3.7      251      No   1.77  41.66 Uni-lib\n18 Hombre   27      4.7      103      Si   2.01  61.91 Uni-lib\n19  Mujer   25      3.6      163      No   1.79  75.47 Soltero\n20 Hombre   25      3.7      182      No   1.61  56.76 Soltero\n21  Mujer   22      4.0      142      No   1.50  87.05 Uni-lib\n22  Mujer   25      4.1      161      No   1.68  68.87 Uni-lib\n23 Hombre   23      3.7      129      Si   1.67  57.26 Uni-lib\n24 Hombre   23      3.8      322      Si   1.52  61.61  Casado\n25  Mujer   21      3.8      142      No   1.74  51.24 Soltero\n26  Mujer   22      4.3      160      Si   1.52  78.51  Casado\n27 Hombre   23      3.8      159      No   1.64  58.08 Soltero\n28 Hombre   27      4.4      168      Si   1.50  53.80 Uni-lib\n29 Hombre   26      4.3      157      Si   1.60  78.85 Soltero\n30 Hombre   21      4.3      258      No   1.53  82.12 Uni-lib\n31 Hombre   23      4.5      306      Si   1.76 106.40  Casado\n32 Hombre   25      4.1      179      No   1.55  80.11  Casado\n33 Hombre   23      4.5      203      No   1.66  66.70  Casado\n34  Mujer   21      3.9      254      Si   1.47  79.12  Casado\n35 Hombre   25      4.2      146      Si   1.57  54.26 Soltero\n36  Mujer   25      3.8      200      No   1.57  57.17  Casado\n37 Hombre   22      4.0      186      No   1.58  86.12 Uni-lib\n38 Hombre   26      4.0      189      No   1.30  88.99 Uni-lib\n39 Hombre   23      4.1      207      Si   1.73  48.82 Soltero\n40 Hombre   22      4.3      128      Si   1.78  62.64  Casado\n41 Hombre   25      4.1      253      Si   1.44  45.96  Casado\n42  Mujer   23      4.1      244      Si   1.67  50.11 Uni-lib\n43  Mujer   23      4.0      225      No   1.52  89.30 Uni-lib\n44 Hombre   20      3.9      194      No   1.55  70.40  Casado\n45  Mujer   24      4.0      227      No   1.17  72.94 Soltero\n46 Hombre   22      3.7      204      Si   1.56  58.06 Uni-lib\n47  Mujer   23      4.1      240      Si   1.61  68.36 Uni-lib\n48 Hombre   21      3.7      144      Si   1.78  53.99 Uni-lib\n49  Mujer   19      4.0      167      Si   1.84  61.13  Casado\n50 Hombre   23      3.9      180      Si   1.90  80.77 Uni-lib\n51 Hombre   25      3.9      202      Si   1.77  92.98 Uni-lib\n52  Mujer   23      3.7      277      Si   1.54  74.12 Uni-lib\n53 Hombre   20      3.9      211      Si   1.55  44.45 Uni-lib\n54  Mujer   24      4.0      131      No   1.28  84.94 Soltero\n55  Mujer   22      4.0      147      Si   2.28  65.76  Casado\n56 Hombre   25      4.3      171      Si   1.43  62.91 Soltero\n57 Hombre   25      3.8      199      Si   1.54  75.69 Soltero\n58  Mujer   22      3.9      196      No   1.73  65.96  Casado\n59  Mujer   25      3.7      218      Si   1.70  92.51 Soltero\n60  Mujer   24      3.8      199      No   1.56  91.47 Uni-lib\n61  Mujer   23      4.0      264      No   1.76  53.92 Soltero\n62 Hombre   24      3.8      185      No   1.56  72.07  Casado\n63  Mujer   17      3.5      194      Si   1.21  77.44  Casado\n64 Hombre   23      3.8      198      No   1.46  73.42 Uni-lib\n65  Mujer   22      3.5      230      Si   1.86  64.38 Uni-lib\n66  Mujer   24      4.0      219      Si   1.59  40.19  Casado\n67 Hombre   23      4.1      197      No   1.79  50.51 Soltero\n68 Hombre   23      4.0      263      Si   1.59  52.34 Uni-lib\n69 Hombre   26      3.8      204      Si   1.82  70.25 Soltero\n70  Mujer   21      3.6      193      Si   1.38  61.96  Casado\n71 Hombre   23      3.6      177      Si   2.05  87.15 Uni-lib\n72  Mujer   25      3.9      151      Si   1.52  55.35 Soltero\n73 Hombre   24      3.8      111      Si   2.20  73.04  Casado\n74 Hombre   23      4.5      304      No   1.45  54.99  Casado\n75 Hombre   21      4.3      197      Si   1.36  54.56 Soltero\n76 Hombre   21      3.9       80      Si   1.54  67.47 Soltero\n77  Mujer   22      4.0      202      No   1.45  92.94 Soltero\n78  Mujer   26      3.9      194      Si   1.78  82.09 Uni-lib\n79  Mujer   23      4.3      131      Si   1.38  81.46  Casado\n80  Mujer   25      4.4      235      Si   1.36  99.13 Uni-lib\n\n\n\n\n\nüìù Tareas a realizar\nResponde las siguientes preguntas usando los datos proporcionados:\n\nTama√±o de la muestra:\nDeterminar cu√°ntos egresados conforman la muestra total.\n\n\n# Tama√±o de la muestra\nnrow(df_egresados)\n\n[1] 80\n\n\n\nN√∫mero de mujeres:\nIdentificar cu√°ntas mujeres est√°n incluidas en la muestra.\n\n\n# N√∫mero de mujeres\nsum(df_egresados$Sexo == \"Mujer\")\n\n[1] 37\n\n\n\nEl egresado m√°s joven:\nEncontrar la edad del egresado m√°s joven en la muestra.\n\n\n# Egresado m√°s joven\nmin(df_egresados$Edad)\n\n[1] 17\n\n\n\nMujeres empleadas:\nDeterminar cu√°ntas mujeres tienen empleo.\n\n\n# Mujeres empleadas\nsum(df_egresados$Sexo == \"Mujer\" & df_egresados$Trabaja == \"Si\")\n\n[1] 17\n\n\n\nIngresos mayores a $251:\nCalcular cu√°ntos egresados ganan m√°s de 251 d√≥lares al mes.\n\n\n# Ingresos mayores a $251\nsum(df_egresados$Ingresos &gt; 244)\n\n[1] 16",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Reto 1 üéì</span>"
    ]
  },
  {
    "objectID": "qmd_files/Reto_1.html#tareas-a-realizar",
    "href": "qmd_files/Reto_1.html#tareas-a-realizar",
    "title": "Reto 1 üéì",
    "section": "üìù Tareas a realizar",
    "text": "üìù Tareas a realizar\nResponde las siguientes preguntas usando los datos proporcionados:\n\nTama√±o de la muestra:\nDeterminar cu√°ntos egresados conforman la muestra total.\n\n\n# Tama√±o de la muestra\nnrow(df_egresados)\n\n[1] 80\n\n\n\nN√∫mero de mujeres:\nIdentificar cu√°ntas mujeres est√°n incluidas en la muestra.\n\n\n# N√∫mero de mujeres\nsum(df_egresados$Sexo == \"Mujer\")\n\n[1] 36\n\n\n\nEl egresado m√°s joven:\nEncontrar la edad del egresado m√°s joven en la muestra.\n\n\n# Egresado m√°s joven\nmin(df_egresados$Edad)\n\n[1] 18\n\n\n\nMujeres empleadas:\nDeterminar cu√°ntas mujeres tienen empleo.\n\n\n# Mujeres empleadas\nsum(df_egresados$Sexo == \"Mujer\" & df_egresados$Trabaja == \"Si\")\n\n[1] 21\n\n\n\nIngresos mayores a $251:\nCalcular cu√°ntos egresados ganan m√°s de 251 d√≥lares al mes.\n\n\n# Ingresos mayores a $251\nsum(df_egresados$Ingresos &gt; 251)\n\n[1] 13",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Reto 1 üéì</span>"
    ]
  },
  {
    "objectID": "qmd_files/Reto_2.html",
    "href": "qmd_files/Reto_2.html",
    "title": "Reto_2",
    "section": "",
    "text": "An√°lisis Exploratorio de Datos - Icfes",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Reto_2</span>"
    ]
  },
  {
    "objectID": "qmd_files/Reto_2.html#descripci√≥n-general",
    "href": "qmd_files/Reto_2.html#descripci√≥n-general",
    "title": "Reto_2",
    "section": "Descripci√≥n General",
    "text": "Descripci√≥n General\nLos estudiantes de la facultad de Ciencias de la UTB presentan el examen Saber Pro - Icfes, del cual se tom√≥ una muestra aleatoria de 110 registros. Las variables consideradas son las siguientes: - EDAD: Edad de los estudiantes en a√±os. - LC: Puntuaciones en el √°rea de lectura cr√≠tica. - MA: Puntuaciones en matem√°ticas. - CN: Puntuaciones en ciencias naturales. - SO: Puntuaciones en sociales. - IN: Puntuaciones en ingl√©s.\n\nDatos\nDescargar los datos en el archivo Icfes.csv.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Reto_2</span>"
    ]
  },
  {
    "objectID": "qmd_files/Reto_2.html#cargar-los-datos",
    "href": "qmd_files/Reto_2.html#cargar-los-datos",
    "title": "Reto_2",
    "section": "Cargar los datos",
    "text": "Cargar los datos\n\n# Cargar las librer√≠as necesarias\nlibrary(reticulate)\n#py_config()\n#py_install(c(\"numpy\", \"pandas\", \"scipy\", \"seaborn\"), envname = \"r-reticulate\")\n\n\nimport numpy as np\nimport pandas as pd\nimport scipy as sp\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nAhora cargamos los datos usando pandas:\n\n# Cargar los datos\ndf = pd.read_csv(\"../assets/data/Reto_2/Icfes.csv\", sep=\";\")\ndf.head()\n\n   EDAD  LC  MA  CN  SO  IN\n0    18  59  46  42  42  45\n1    18  63  64  67  55  72\n2    18  63  62  59  59  64\n3    16  75  65  65  73  72\n4    15  67  60  68  65  68",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Reto_2</span>"
    ]
  },
  {
    "objectID": "qmd_files/Reto_2.html#instrucciones-del-profesor",
    "href": "qmd_files/Reto_2.html#instrucciones-del-profesor",
    "title": "Reto_2",
    "section": "Instrucciones del Profesor",
    "text": "Instrucciones del Profesor\nEl profesor JORGE LUIS VILLALBA ACEVEDO indica a sus estudiantes del curso de Estad√≠stica y Probabilidad lo siguiente:\n\nSeleccionar las variables:\n\nEDAD = X\nMA = Y\n\nCalcular los siguientes estad√≠sticos (nota: aplicar redondeo a dos decimales):\n\n\nC√°lculos Solicitados\n\nSuma de cuadrados para xy (Sxy)\n\nLa suma de cuadrados para xy representa la covarianza entre las variables x e y. Se calcula como la suma de los productos de las diferencias de cada variable respecto a su media.\n\n# Suma de cuadrados para xy\nSxy = np.sum((df[\"EDAD\"] - df[\"EDAD\"].mean()) * (df[\"MA\"] - df[\"MA\"].mean()))\nprint(f\"Sxy: {Sxy:.2f}\")\n\nSxy: -923.49\n\n\n\nSuma de cuadrados para x (Sxx)\n\nAsi mismo, la suma de cuadrados de una variable indivual como en este caso, representa la varianza de la variable. Se calcula como la suma de los cuadrados de las diferencias de cada valor respecto a la media.\n\n# Suma de cuadrados para x\nSxx = np.sum((df[\"EDAD\"] - df[\"EDAD\"].mean())**2)\nprint(f\"Sxx: {Sxx:.2f}\")\n\nSxx: 219.05\n\n\n\nSuma de cuadrados para y (Syy)\n\nHacemos lo mismo para y:\n\n# Suma de cuadrados para y\nSyy = np.sum((df[\"MA\"] - df[\"MA\"].mean())**2)\nprint(f\"Syy: {Syy:.2f}\")\n\nSyy: 23831.42\n\n\n\nCoeficiente de asimetr√≠a para x\n\nEste coeficiente mide la asimetr√≠a de la distribuci√≥n de la variable x. Se calcula como el tercer momento centrado estandarizado.\n\n# Coeficiente de asimetr√≠a para x\ncoef_asimetria_x = (3 * (df[\"EDAD\"].mean() - df[\"EDAD\"].median())) / df[\"EDAD\"].std()\nprint(f\"Coeficiente de asimetr√≠a para x: {coef_asimetria_x:.2f}\")\n\nCoeficiente de asimetr√≠a para x: 0.92\n\n\nPodemos representar graficamente este coeficiente:\n\n#Usamos seaborn\nsns.histplot(df[\"EDAD\"], kde=True)\nplt.axvline(df[\"EDAD\"].mean(), color='r', linestyle='--', label='Media')\nplt.axvline(df[\"EDAD\"].median(), color='g', linestyle='--', label='Mediana')\nplt.legend()\n\n\n\n\n\n\n\n\nEl resultado de 0.92 indica una asimetr√≠a positiva, lo que significa que la cola derecha de la distribuci√≥n es m√°s larga o m√°s gruesa que la izquierda.\n\nCoeficiente de asimetr√≠a para y\n\n\n# Coeficiente de asimetr√≠a para y\ncoef_asimetria_y = (3 * (df[\"MA\"].mean() - df[\"MA\"].median())) / df[\"MA\"].std()\nprint(f\"Coeficiente de asimetr√≠a para y: {coef_asimetria_y:.2f}\")\n\nCoeficiente de asimetr√≠a para y: -0.59\n\n\nPodemos representar graficamente este coeficiente:\n\n#Usamos seaborn\nsns.histplot(df[\"MA\"], kde=True)\nplt.axvline(df[\"MA\"].mean(), color='r', linestyle='--', label='Media')\nplt.axvline(df[\"MA\"].median(), color='g', linestyle='--', label='Mediana')\nplt.legend()\n\n\n\n\n\n\n\n\nEste coeficiente para la variable y negativo nos indica una asimetr√≠a negativa, lo que significa que la cola izquierda de la distribuci√≥n es m√°s larga o m√°s gruesa que la derecha.\n\nCurtosis para x\n\n\n# Curtosis para x\ncurtosis_x = df[\"EDAD\"].kurtosis()\nprint(f\"Curtosis para x: {curtosis_x:.2f}\")\n\nCurtosis para x: -1.01\n\n\n\nCurtosis para y\n\n\n# Curtosis para y\ncurtosis_y = df[\"MA\"].kurtosis()\nprint(f\"Curtosis para y: {curtosis_y:.2f}\")\n\nCurtosis para y: -0.64\n\n\nLa curtosis mide la ‚Äúaltura‚Äù de la distribuci√≥n. Un valor positivo indica una distribuci√≥n m√°s alta y estrecha, mientras que un valor negativo indica una distribuci√≥n m√°s baja y ancha. Podemos representar ambas curtosis de la siguiente manera usando seaborn:\n\n#Usamos seaborn\nsns.histplot(df[\"EDAD\"], kde=True)\nplt.axvline(df[\"EDAD\"].mean(), color='r', linestyle='--', label='Media')\nplt.axvline(df[\"EDAD\"].median(), color='g', linestyle='--', label='Mediana')\nplt.legend()\n\n\n\n\n\n\n\n\n\n#Ahora para MA \nsns.histplot(df[\"MA\"], kde=True)\nplt.axvline(df[\"MA\"].mean(), color='r', linestyle='--', label='Media')\nplt.axvline(df[\"MA\"].median(), color='g', linestyle='--', label='Mediana')\nplt.legend()\n\n\n\n\n\n\n\n\n\nCovarianza entre las variables x e y (Cov(x, y))\n\nLa covarianza representa la medida en que dos variables cambian juntas. Si ambas variables tienden a aumentar o disminuir juntas, la covarianza ser√° positiva. Si una variable tiende a aumentar mientras la otra disminuye, la covarianza ser√° negativa.\n\n# Covarianza entre las variables x e y\ncov_xy = np.cov(df[\"EDAD\"], df[\"MA\"])[0][1]\nprint(f\"Cov(x, y): {cov_xy:.2f}\")\n\nCov(x, y): -8.47\n\n\nEn este caso nos dio negativa la covarianza lo que significa que a medida que aumenta la edad, la puntuaci√≥n en matem√°ticas tiende a disminuir.Esto lo podemos representar y verlo graficamente usando un grafico de dispersi√≥n:\n\n# Grafico de dispersi√≥n\nplt.scatter(df[\"EDAD\"], df[\"MA\"])\nplt.title(\"Dispersi√≥n entre EDAD y MA\")\nplt.xlabel(\"EDAD\")\nplt.ylabel(\"MA\")\nplt.axhline(y=df[\"MA\"].mean(), color='r', linestyle='--', label='Media MA')\nplt.axvline(x=df[\"EDAD\"].mean(), color='g', linestyle='--', label='Media EDAD')\nplt.legend()\n\n\n\n\n\n\n\n\n\nCorrelaci√≥n entre las variables x e y (r)\n\nLa correlacion es una medida estandarizada de la covarianza. Var√≠a entre -1 y 1, donde -1 indica una correlaci√≥n negativa perfecta, 0 indica ninguna correlaci√≥n y 1 indica una correlaci√≥n positiva perfecta.\n\n# Correlaci√≥n entre las variables x e y\ncorrelation_xy = np.corrcoef(df[\"EDAD\"], df[\"MA\"])[0][1]\nprint(f\"Correlaci√≥n entre x e y: {correlation_xy:.2f}\")\n\nCorrelaci√≥n entre x e y: -0.40\n\n\n\nCoeficiente de determinaci√≥n entre las variables\n\nEl coeficiente de determinaci√≥n (R¬≤) es la proporci√≥n de la varianza en la variable dependiente que es predecible a partir de la variable independiente. Se calcula como el cuadrado del coeficiente de correlaci√≥n.\n\n# Coeficiente de determinaci√≥n entre las variables\nr_squared = correlation_xy**2\nprint(f\"Coeficiente de determinaci√≥n: {r_squared:.2f}\")\n\nCoeficiente de determinaci√≥n: 0.16\n\n\n\nLa pendiente b‚ÇÅ de la recta\n\nLa pendiente b‚ÇÅ de la recta de regresi√≥n lineal simple se calcula como la covarianza entre x e y dividida por la varianza de x.\n\n# La pendiente b‚ÇÅ de la recta\nb1 = Sxy / Sxx\nprint(f\"La pendiente b‚ÇÅ de la recta: {b1:.2f}\")\n\nLa pendiente b‚ÇÅ de la recta: -4.22\n\n\n\nEl intercepto b‚ÇÄ con el eje y\n\nEl intercepto b‚ÇÄ de la recta de regresi√≥n lineal simple se calcula como la media de y menos la pendiente multiplicada por la media de x.\n\n# El intercepto b‚ÇÄ con el eje y\nb0 = df[\"MA\"].mean() - b1 * df[\"EDAD\"].mean()\nprint(f\"El intercepto b‚ÇÄ con el eje y: {b0:.2f}\")\n\nEl intercepto b‚ÇÄ con el eje y: 129.37\n\n\n\nPron√≥stico en MA basado en EDAD\n\nPara calcular este pronostico usamos la ecuaci√≥n de la recta de regresi√≥n lineal simple:\n\n# Pron√≥stico en MA basado en EDAD\ndef pronostico_ma(edad):\n    return b0 + b1 * edad\n\nedad = 17\nresultado = pronostico_ma(edad)\nprint(f\"Pron√≥stico en MA para EDAD = {edad}: {resultado:.2f}\")\n\nPron√≥stico en MA para EDAD = 17: 57.70\n\n\nEsto se puede representar graficamente con un grafico de dispersi√≥n y la recta de regresi√≥n:\n\n# Grafico de dispersi√≥n con la recta de regresi√≥n\nplt.scatter(df[\"EDAD\"], df[\"MA\"], label='Datos')\nplt.plot(df[\"EDAD\"], b0 + b1 * df[\"EDAD\"], color='red', label='Recta de regresi√≥n')\nplt.title(\"Dispersi√≥n entre EDAD y MA con la recta de regresi√≥n\")\nplt.xlabel(\"EDAD\")\nplt.ylabel(\"MA\")\nplt.axhline(y=df[\"MA\"].mean(), color='r', linestyle='--', label='Media MA')\nplt.axvline(x=df[\"EDAD\"].mean(), color='g', linestyle='--', label='Media EDAD')\nplt.legend()\n\n\n\n\n\n\n\n\n\nCoeficiente de asimetr√≠a para los errores (œµ)\n\nEsto indica la asimetr√≠a de la distribuci√≥n de los errores de la regresi√≥n. Se calcula como el tercer momento centrado estandarizado de los errores.\n\n# Coeficiente de asimetr√≠a para los errores\nerrores = df[\"MA\"] - (b0 + b1 * df[\"EDAD\"])\ncoef_asimetria_errores = (3 * (errores.mean() - errores.median())) / errores.std()\nprint(f\"Coeficiente de asimetr√≠a para los errores: {coef_asimetria_errores:.2f}\")\n\nCoeficiente de asimetr√≠a para los errores: -0.38\n\n\n\nCurtosis para los errores (œµ)\n\nLa curtosis cuando se calcula en los errores indica la ‚Äúaltura‚Äù de la distribuci√≥n de los errores. Un valor positivo indica una distribuci√≥n m√°s alta y estrecha, mientras que un valor negativo indica una distribuci√≥n m√°s baja y ancha.Y en los errores esto significa que cuando es positivo, la mayor√≠a de los errores son peque√±os y pocos son grandes.\n\n# Curtosis para los errores\ncurtosis_errores = errores.kurtosis()\nprint(f\"Curtosis para los errores: {curtosis_errores:.2f}\")\n\nCurtosis para los errores: -0.04\n\n\n\nSuma de los cuadrados de los errores (SCE)\n\nLa suma de los cuadrados de los errores mide la variabilidad de los errores de la regresi√≥n. Se calcula como la suma de los cuadrados de los errores.\n\n# Suma de los cuadrados de los errores\nSCE = np.sum(errores**2)\nprint(f\"Suma de los cuadrados de los errores: {SCE:.2f}\")\n\nSuma de los cuadrados de los errores: 19938.16\n\n\n\nSuma de los cuadrados de la regresi√≥n (SCR)\n\nLa suma de los cuadrados de la regresi√≥n mide la variabilidad explicada por el modelo de regresi√≥n. Se calcula como la suma de los cuadrados de las diferencias entre las predicciones y la media de y.\n\n# Suma de los cuadrados de la regresi√≥n\nSCR = np.sum((b0 + b1 * df[\"EDAD\"] - df[\"MA\"].mean())**2)\nprint(f\"Suma de los cuadrados de la regresi√≥n: {SCR:.2f}\")\n\nSuma de los cuadrados de la regresi√≥n: 3893.26\n\n\n\nSuma de los cuadrados totales (SCT)\n\nLa suma de los cuadrados totales mide la variabilidad total en y. Se calcula como la suma de los cuadrados de las diferencias entre cada valor y la media de y.\n\n# Suma de los cuadrados totales\nSCT = np.sum((df[\"MA\"] - df[\"MA\"].mean())**2)\nprint(f\"Suma de los cuadrados totales: {SCT:.2f}\")\n\nSuma de los cuadrados totales: 23831.42\n\n\n\nVarianza estimada de los residuos (s¬≤)\n\nLa varianza estimada de los residuos mide la variabilidad de los errores de la regresi√≥n. Se calcula como la suma de los cuadrados de los errores dividida por el n√∫mero de observaciones menos 2 (grados de libertad).\n\n# Varianza estimada de los residuos\ns2 = SCE / (len(df) - 2)\nprint(f\"Varianza estimada de los residuos: {s2:.2f}\")\n\nVarianza estimada de los residuos: 184.61\n\n\n\n\nError est√°ndar de la estimaci√≥n (s)\n\nEl error est√°ndar de la estimaci√≥n mide la precisi√≥n de las predicciones del modelo de regresi√≥n. Se calcula como la ra√≠z cuadrada de la varianza estimada de los residuos.\n\n# Error est√°ndar de la estimaci√≥n\ns = np.sqrt(s2)\nprint(f\"Error est√°ndar de la estimaci√≥n: {s:.2f}\")\n\nError est√°ndar de la estimaci√≥n: 13.59\n\n\n\nMedia de los errores estandarizados\n\nLos errores estandarizados son los errores divididos por el error est√°ndar de la estimaci√≥n. La media de los errores estandarizados deber√≠a ser cercana a 0.\n\n# Media de los errores estandarizados\nerrores_estandarizados = (errores - errores.mean()) / s\nmedia_errores_estandarizados = errores_estandarizados.mean()\nprint(f\"Media de los errores estandarizados: {media_errores_estandarizados:.2f}\")\n\nMedia de los errores estandarizados: -0.00",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Reto_2</span>"
    ]
  }
]